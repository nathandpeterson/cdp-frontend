{"version":3,"sources":["../node_modules/natural/lib/natural/sentiment sync","components/Header.jsx","components/Footer.jsx","pages/Home.jsx","api/baseApi.js","api/utils.js","api/eventApi.js","components/EventCard.jsx","components/EventCardGroup.jsx","containers/EventCardGroup.jsx","pages/Search.jsx","api/personApi.js","components/VotingTable.jsx","components/EventVotingPane.jsx","containers/EventVotingPane.jsx","utils/hhmmss.js","components/Event.jsx","containers/Event.jsx","pages/Event.jsx","components/PeopleCardGroup.jsx","containers/PeopleCardGroupContainer.jsx","pages/People.jsx","components/Person.jsx","containers/PersonContainer.jsx","pages/Person.jsx","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Brand","styled","h1","HeadingTab","transition","borderRadius","padding","marginLeft","backgroundColor","color","Header","Fragment","Segment","vertical","Container","to","style","Footer","inverted","Grid","stackable","Row","columns","Column","as","content","List","link","Item","Layout","minHeight","ContentContainer","marginTop","marginBottom","SearchBar","Input","width","StyledGrid","display","HomePage","React","useState","searchQuery","setSearchQuery","handleSearch","a","value","verticalAlign","centered","placeholder","onChange","Button","attached","primary","Link","firebase","apiKey","authDomain","projectId","databaseURL","db","extractData","queryResults","results","forEach","doc","data","thisEvent","push","getAllResources","tableName","collection","get","catch","err","console","res","getSingleResource","accessor","where","Promise","reject","getResourceById","fetchJson","url","fetch","then","json","storage","getEventMinutes","eventId","eventMinutes","getEventMinutesItem","eventMinutesItemId","minutes_item_id","created","decision","event_id","index","minutesItem","minutesItemFile","minutes_item","file","getEventBody","bodyId","body","getEventTranscriptMetadata","firstTranscript","file_id","transcriptMetadata","gsReference","refFromURL","uri","getDownloadURL","transcript","getVotesForEvent","extractedMinutes","minuteItemsWithDecisions","filter","minute","allMinuteItems","formattedItems","item","thisMinuteItem","find","minuteItem","matter","name","allPeople","promises","getVotesForMinuteItem","all","votesForMinuteItem","thisEventMinutesItemId","event_minutes_item_id","formattedMinutesItem","votesByPerson","unformattedVote","person","person_id","full_name","formattedIndividualVotes","getEventById","event","body_id","minutes","map","minutesItems","description","videoUrl","video_uri","date","moment","utc","event_datetime","toDate","format","sortBy","scPageUrl","source_uri","getBasicEventById","getEventsByIndexedTerm","term","valueMin","natural","PorterStemmer","attach","stemmedTokens","tokenizeAndStem","stemmedToken","matches","summedMatchValueByEventId","mapValues","groupBy","flatten","match","eventTermMatches","key","reduce","current","sortedSummedMatches","reverse","events","StyledCard","Card","boxShadow","StyledCardContent","Content","EventCard","fluid","Meta","Description","EventCardGroup","Group","margin","EventCardGroupContainer","query","searchInProgress","setSearchInProgress","visibleEvents","setVisibleEvents","useEffect","matchedEvents","loading","Search","location","q","queryString","parse","search","getAllPeople","getVotesForPerson","personId","formattedVotes","votes","allEventMinutesItems","voteData","eventMinuteItem","formattedVote","voteForPerson","Headers","text","MiniTable","MiniTableCell","VotingTable","votingData","isPerson","Table","striped","headerMetaData","HeaderCell","Body","votingDatum","Cell","record","Icon","LoadingContainer","EventVotingPane","length","Loader","active","EventVotingPaneContainer","updateVotingData","fetchData","hhmmss","sec_num","parseInt","hours","Math","floor","seconds","Title","Date","span","fontWeight","Subheader","h2","SearchInput","fontSize","lineHeight","SearchResultCount","paddingLeft","TranscriptItem","div","TranscriptItemText","Highlighter","TranscriptSearchHelpMessage","ScrollDiv","overflowY","maxHeight","border","Timestamp","StyledTab","Tab","Pane","WebkitBoxShadow","Event","title","videoPlayerRef","useRef","transcriptItems","setTranscriptItems","transcriptSearchText","setTranscriptSearchText","handleSeek","seekTo","parseFloat","window","scroll","top","left","behavior","panes","menuItem","render","ordered","i","href","start_time","size","onClick","paddingTop","ref","controls","substring","toLowerCase","indexOf","searchWords","autoEscape","textToHighlight","menu","secondary","pointing","EventContainer","setEvent","eventData","EventPage","params","FlexWrapContainer","flexWrap","marginRight","cursor","transform","CardHeading","withRouter","people","history","email","PeopleCardGroupContainer","updatePeople","People","FlexContainer","justifyContent","flexDirection","alignItems","Person","personHistory","phone","website","target","rel","updatePersonHistory","App","exact","path","component","Home","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yGAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,4LCHnBC,EAAQC,IAAOC,GAAG,IAElBC,EAAaF,YAAO,OAAPA,CAAe,CAChCG,WAAY,UACZC,aAAc,MACdC,QAAS,aACTC,WAAY,SACZ,SAAU,CACRC,gBAAiB,UACjBC,MAAO,WA0BIC,EAtBA,kBACb,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAASC,UAAQ,GACf,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAACf,EAAD,gCAIN,kBAACY,EAAA,EAAD,CAASC,UAAQ,GACf,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAACZ,EAAD,gBAEF,kBAAC,IAAD,CAAMY,GAAG,WACP,kBAACZ,EAAD,CAAYa,MAAO,CAACT,WAAY,SAAhC,e,2BCeKU,EA7CA,kBACb,kBAACL,EAAA,EAAD,CAASM,UAAQ,EAACL,UAAQ,EAACG,MAAO,CAAEV,QAAS,YAC3C,kBAACQ,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAMD,UAAQ,EAACE,WAAS,GACtB,kBAACD,EAAA,EAAKE,IAAN,CAAUC,QAAQ,SAChB,kBAACH,EAAA,EAAKI,OAAN,KACE,kBAAC,IAAD,CAAQL,UAAQ,EAACM,GAAG,KAAKC,QAAQ,UACjC,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACT,UAAQ,GACjB,kBAACQ,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,eACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,YACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,gBAGJ,kBAACL,EAAA,EAAKI,OAAN,KACE,kBAAC,IAAD,CAAQL,UAAQ,EAACM,GAAG,KAAKC,QAAQ,YACjC,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACT,UAAQ,GACjB,kBAACQ,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,mBACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,qBACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,qBAGJ,kBAACL,EAAA,EAAKI,OAAN,KACE,kBAAC,IAAD,CAAQL,UAAQ,EAACM,GAAG,KAAKC,QAAQ,eACjC,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACT,UAAQ,GACjB,kBAACQ,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,wBACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,oBACA,kBAACE,EAAA,EAAKE,KAAN,CAAWJ,GAAG,KAAd,2BAIN,kBAACL,EAAA,EAAKE,IAAN,KACE,6W,kDC7BJQ,EAAS5B,YAAOa,IAAPb,CAAkB,CAC/B6B,UAAW,UAGPC,EAAmB9B,YAAOa,IAAPb,CAAkB,CACzC+B,UAAW,iBACXC,aAAc,mBAGVC,EAAYjC,YAAOkC,IAAPlC,CAAc,CAC9BmC,MAAO,mBAGHC,EAAapC,YAAOkB,IAAPlB,CAAa,CAC9BqC,QAAS,QACTN,UAAW,qBAsCEO,EAnCE,WAAO,IAAD,EACiBC,IAAMC,WADvB,mBACdC,EADc,KACDC,EADC,KAGfC,EAAY,sCAAG,WAAOpD,EAAP,kBAAAqD,EAAA,qDAAYC,EAAZ,EAAYA,MAC/BH,EAAeG,GADI,yCAAH,wDAIlB,OACE,kBAACjB,EAAD,KACE,kBAACE,EAAD,KACE,kBAACM,EAAD,CAAYU,cAAc,SAASC,UAAQ,GACzC,kBAAC7B,EAAA,EAAKE,IAAN,KACE,gEAEF,kBAACF,EAAA,EAAKE,IAAN,KACE,kBAACa,EAAD,CACEe,YAAY,gDACZH,MAAOJ,EACPQ,SAAUN,IAEZ,kBAACO,EAAA,EAAD,CACEC,SAAS,QACTC,SAAO,EACP7B,GAAI8B,IACJvC,GAAE,oBAAe2B,IAJnB,e,uoBCxCZa,gBAAuB,CACrBC,OAAQ,0CACRC,WAAY,0BACZC,UAAW,cACXC,YAAa,mCAGf,IAAMC,EAAKL,c,SAEIM,E,6EAAf,WAA2BC,GAA3B,eAAAjB,EAAA,4DACQkB,EAAU,GAChBD,EAAaE,QAAQ,SAAAC,GACnB,IAAMC,EAAOD,EAAIC,OACXC,EAAS,GACbpE,GAAIkE,EAAIlE,IACLmE,GAELH,EAAQK,KAAKD,KARjB,kBAUSJ,GAVT,0C,sBAkBO,SAAeM,EAAtB,kC,2CAAO,WAA+BC,GAA/B,eAAAzB,EAAA,qEACae,EACfW,WAAWD,GACXE,MACAC,MAAM,SAAAC,GACLC,QAAQD,IAAI,aAAWA,KALtB,cACCE,EADD,yBAOEf,EAAYe,IAPd,0C,sBAUA,SAAeC,EAAtB,sC,2CAAO,WAAiCP,EAAWQ,EAAU/E,GAAtD,eAAA8C,EAAA,8EAEee,EACfW,WAAWD,GACXS,MAAMD,EAAU,KAAM/E,GACtByE,MACAC,MAAM,SAAAC,GACLC,QAAQD,IAAI,aAAWA,KAPxB,cAEGE,EAFH,yBAUIf,EAAYe,IAVhB,yDAYII,QAAQC,OAAR,OAZJ,wD,sBAgBA,SAAeC,EAAtB,oC,2CAAO,WAA+BZ,EAAWvE,GAA1C,eAAA8C,EAAA,8EAEee,EACfW,WAAWD,GACXL,IAAIlE,GACJyE,MALA,cAEGI,EAFH,yBAOIA,EAAIV,QAPR,yDASIc,QAAQC,OAAR,OATJ,wD,sBCxDA,SAAeE,EAAtB,kC,2CAAO,WAAyBC,GAAzB,SAAAvC,EAAA,8EACIwC,MAAMD,GACRE,KAAK,SAAAV,GAAG,OAAIA,EAAIW,UAFlB,0C,ykBCOP,IAAMC,GAAUjC,YAWT,SAAekC,GAAtB,mC,6CAAO,WAA+BC,GAA/B,eAAA7C,EAAA,8EAEwBgC,EACzB,qBACA,WACAa,GALC,cAEGC,EAFH,yBAOIA,GAPJ,yDASIX,QAAQC,OAAR,OATJ,wD,sBAaA,SAAeW,GAAtB,mC,6CAAO,WAAmCC,GAAnC,6BAAAhD,EAAA,8EAQOqC,EAAgB,qBAAsBW,GAR7C,uBAGDC,EAHC,EAGDA,gBACAC,EAJC,EAIDA,QACAC,EALC,EAKDA,SACAC,EANC,EAMDA,SACAC,EAPC,EAODA,MAPC,UASuBhB,EAAgB,eAAgBY,GATvD,eASGK,EATH,iBAU2BtB,EAC5B,oBACA,kBACAiB,GAbC,eAUGM,EAVH,yBAgBI,CACLrG,GAAI8F,EACJE,UACAC,WACAC,WACAC,QACAG,aAAa,GACXtG,GAAI+F,GACDK,EAFO,CAGVG,KAAMF,MAzBP,2DA6BIpB,QAAQC,OAAR,OA7BJ,yD,sBAiCA,SAAesB,GAAtB,mC,6CAAO,WAA4BC,GAA5B,eAAA3D,EAAA,8EAEgBqC,EAAgB,OAAQsB,GAFxC,cAEGC,EAFH,yBAGIA,GAHJ,yDAKIzB,QAAQC,OAAR,OALJ,wD,sBASA,SAAeyB,GAAtB,mC,6CAAO,WAA0ChB,GAA1C,yBAAA7C,EAAA,8EAE6BgC,EAC9B,aACA,WACAa,GALC,0CAEIiB,EAFJ,cAQ8BzB,EAC/B,OACAyB,EAAgBC,SAVf,cAQGC,EARH,OAcGC,EAActB,GAAQuB,WAAWF,EAAmBG,KAdvD,UAesBF,EACtBG,iBACA3B,KAAK,SAAAF,GAAG,OAAID,EAAUC,KAjBtB,eAeG8B,EAfH,yBAmBIA,GAnBJ,2DAqBIlC,QAAQC,OAAR,OArBJ,yD,sBAyBA,SAAekC,GAAtB,mC,6CAAO,WAAgCzB,GAAhC,yBAAA7C,EAAA,qEAE0BgC,EAC7B,qBACA,WACAa,GALG,cAEC0B,EAFD,OAQCC,EAA2BD,EAAiBE,OAChD,SAAAC,GAAM,OAAwB,OAApBA,EAAOvB,WATd,SAawB3B,EAAgB,gBAbxC,cAaCmD,EAbD,OAcCC,EAAiB,GACvBJ,EAAyBrD,QAAQ,SAAA0D,GAC/B,IAAMC,EAAiBH,EAAeI,KACpC,SAAAC,GAAU,OAAIA,EAAW9H,KAAO2H,EAAK5B,kBAEvC2B,EAAerD,KAAK,CAClB0D,OAAQH,EAAeG,OACvBC,KAAMJ,EAAeI,KACrBhI,GAAI2H,EAAK3H,GACTiG,SAAU0B,EAAK1B,aAvBd,UA2BmB3B,EAAgB,UA3BnC,eA2BC2D,EA3BD,OA4BCC,EAAW,GACjBR,EAAezD,QAAQ,SAAA0D,GACrB,IAAMQ,EAAwBrD,EAC5B,OACA,wBACA6C,EAAK3H,IAEPkI,EAAS7D,KAAK8D,KAnCX,UAqCClD,QAAQmD,IAAIF,GAAU3C,KAAK,SAAAV,GAC/BA,EAAIZ,QAAQ,SAAAoE,GACV,IAAMC,EACJD,EAAmB,GAAGE,sBAClBC,EAAuBd,EAAeG,KAC1C,SAAAF,GAAI,OAAIA,EAAK3H,KAAOsI,IAEhBG,EAAgB,GACtBJ,EAAmBpE,QAAQ,SAAAyE,GACzB,IAAMC,EAASV,EAAUJ,KACvB,SAAAc,GAAM,OAAIA,EAAO3I,KAAO0I,EAAgBE,YAE1CH,EAAcpE,KAAK,CACjB4B,SAAUyC,EAAgBzC,SAC1B2C,UAAWF,EAAgBE,UAC3BC,UAAWF,EAAOE,cAGtBL,EAAqBM,yBAA2BL,MAvD/C,iCA0DEf,GA1DF,2C,sBA6DA,SAAeqB,GAAtB,mC,6CAAO,WAA4B/I,GAA5B,uBAAA8C,EAAA,8EAEiBqC,EAAgB,QAASnF,GAF1C,cAEGgJ,EAFH,gBAGgBxC,GAAawC,EAAMC,SAHnC,cAGGvC,EAHH,gBAImBhB,GAAgB1F,GAJnC,cAIGkJ,EAJH,iBAKwBjE,QAAQmD,IACjCc,EAAQC,IAAI,mBAAYtD,GAAZ,EAAG7F,OANd,eAKGoJ,EALH,iBAQsBzC,GAA2B3G,GARjD,eAQGmH,EARH,yBAUI,CACLnH,KACAgI,KAAMtB,EAAKsB,KACXqB,YAAa3C,EAAK2C,YAClBC,SAAUN,EAAMO,UAChBC,KAAMC,IACHC,IAAIV,EAAMW,eAAeC,UACzBC,OAAO,uBACVX,QAASY,iBAAOV,EAAc,SAAAtB,GAAU,OAAIA,EAAW3B,QACvDgB,WAAYA,EAAWhD,KACvB4F,UAAWf,EAAMgB,aApBhB,2DAuBI/E,QAAQC,OAAR,OAvBJ,yD,sBA2BA,SAAe+E,GAAtB,mC,6CAAO,WAAiCjK,GAAjC,iBAAA8C,EAAA,8EAEiBqC,EAAgB,QAASnF,GAF1C,cAEGgJ,EAFH,gBAGgBxC,GAAawC,EAAMC,SAHnC,cAGGvC,EAHH,yBAKI,CACL1G,KACAgI,KAAMtB,EAAKsB,KACXqB,YAAa3C,EAAK2C,YAClBG,KAAMC,IACHC,IAAIV,EAAMW,eAAeC,UACzBC,OAAO,yBAXT,2DAcI5E,QAAQC,OAAR,OAdJ,yD,sBAkBA,SAAegF,GAAtB,mC,6CAAO,WAAsCC,GAAtC,yBAAArH,EAAA,4DACCsH,EAAW,GADZ,SAGHC,IAAQC,cAAcC,SAEhBC,EAAgBL,EAAKM,kBALxB,SAQmBxF,QAAQmD,IAC5BoC,EAAcrB,IAAI,SAAAuB,GAAY,OAC5B5F,EAAkB,qBAAsB,OAAQ4F,MAVjD,cAQGC,EARH,OAeGC,EAA4BC,oBAChCC,kBAAQC,kBAAQJ,GAAU,SAAAK,GAAK,OAAIA,EAAM9E,WACzC,SAAC+E,EAAkBC,GAAnB,OACED,EAAiBE,OACf,SAACC,EAASzD,GAAV,YACKyD,EADL,CAEErI,MAAOqI,EAAQrI,MAAQ4E,EAAK5E,SAE9B,CAAEmD,SAAUgF,EAAKnI,MAAO,MAKxBsI,EAAsBC,kBAC1BxB,iBACEvC,iBAAOqD,EAA2B,qBAAG7H,OAAqBqH,IAC1D,qBAAGrH,SA/BJ,UAoCkBkC,QAAQmD,IAC3BiD,EAAoBlC,IAAI,mBAAkBc,GAAlB,EAAG/D,aArC1B,eAoCGqF,EApCH,yBAwCIA,GAxCJ,2DA0CItG,QAAQC,OAAR,OA1CJ,yD,oCCvMDsG,GAAatL,YAAOuL,KAAPvL,CAAa,CAC9BwL,UAAW,oBAGPC,GAAoBzL,YAAOuL,KAAKG,QAAZ1L,CAAqB,CAC7CK,QAAS,iBAeIsL,GAZG,SAAC,GAAD,IAAG7D,EAAH,EAAGA,KAAMwB,EAAT,EAASA,KAAMH,EAAf,EAAeA,YAAazH,EAA5B,EAA4BA,KAA5B,OAChB,kBAAC4J,GAAD,CAAYM,OAAK,GACf,kBAACH,GAAD,KACE,kBAACF,GAAA,EAAK9K,OAAN,KACE,kBAAC,IAAD,CAAMK,GAAIY,GAAOoG,IAEnB,kBAACyD,GAAA,EAAKM,KAAN,KAAYvC,GACZ,kBAACiC,GAAA,EAAKO,YAAN,KAAmB3C,MCDV4C,GAfQ,SAAC,GAAgB,IAAdV,EAAa,EAAbA,OACxB,OACE,kBAACE,GAAA,EAAKS,MAAN,CAAYjJ,UAAQ,GACjBsI,EAAOpC,IAAI,gBAAGnB,EAAH,EAAGA,KAAMwB,EAAT,EAASA,KAAMH,EAAf,EAAeA,YAAarJ,EAA5B,EAA4BA,GAA5B,OACV,kBAAC,GAAD,CACEgI,KAAMA,EACNwB,KAAMA,EACNH,YAAaA,EACbzH,KAAI,kBAAa5B,SCNrBmC,GAAYjC,YAAOkC,IAAPlC,CAAc,CAC9BmC,MAAO,iBACP8J,OAAQ,yBA0CKC,GAvCiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACP5J,IAAMC,SAAS2J,GADR,mBACtC1J,EADsC,KACzBC,EADyB,OAEGH,IAAMC,UAAS,GAFlB,mBAEtC4J,EAFsC,KAEpBC,EAFoB,OAGH9J,IAAMC,SAAS,IAHZ,mBAGtC8J,EAHsC,KAGvBC,EAHuB,KAK7ChK,IAAMiK,UAAU,WACd,qBAAC,4BAAA5J,EAAA,yDACKH,EADL,uBAEG4J,GAAoB,GAFvB,SAG+BrC,GAAuBvH,GAHtD,OAGSgK,EAHT,OAKGF,EAAiBE,GACjBJ,GAAoB,GANvB,wCAAD,IASC,IAEH,IAAM1J,EAAY,sCAAG,WAAOpD,EAAP,oBAAAqD,EAAA,4DAAYC,EAAZ,EAAYA,MAC/BH,EAAeG,GACfwJ,GAAoB,GAFD,SAGSrC,GAAuBnH,GAHhC,OAGb4J,EAHa,OAKnBF,EAAiBE,GACjBJ,GAAoB,GAND,yCAAH,wDASlB,OACE,kBAAC,IAAM3L,SAAP,KACE,kBAAC,GAAD,CACEsC,YAAY,uBACZH,MAAOJ,EACPQ,SAAUN,EACV+J,QAASN,IAEX,kBAAC,GAAD,CAAgBf,OAAQiB,MCvCxB1K,GAAS5B,YAAOa,IAAPb,CAAkB,CAC/B6B,UAAW,UAGPC,GAAmB9B,YAAOa,IAAPb,CAAkB,CACzC+B,UAAW,iBACXC,aAAc,mBAcD2K,GAXA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACRC,EAAMC,IAAYC,MAAMH,EAASI,QAAjCH,EACR,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAgBV,MAAOU,O,olBClBxB,SAAeI,KAAtB,gC,6CAAO,4BAAArK,EAAA,qEACqBwB,EAAgB,UADrC,cACG2D,EADH,yBAEIA,GAFJ,0C,sBAWA,SAAemF,GAAtB,mC,6CAAO,WAAiCC,GAAjC,uBAAAvK,EAAA,4DACGwK,EAAiB,GADpB,SAEkBnI,EAAgB,SAASkI,GAF3C,cAEG1E,EAFH,gBAGiB7D,EAAkB,OAAQ,YAAauI,GAHxD,cAGGE,EAHH,gBAIgCjJ,EAAgB,sBAJhD,cAIGkJ,EAJH,iBAK0BlJ,EAAgB,gBAL1C,eAKGmD,EALH,OAQH8F,EAAMtJ,QAAQ,SAACwJ,GACX,IAAMC,EAAkBF,EAAqB3F,KAAK,SAAAF,GAAI,OAAIA,EAAK3H,KAAOyN,EAASlF,wBACzET,EAAaL,EAAeI,KAAK,SAAAF,GAAI,OAAIA,EAAK3H,KAAO0N,EAAgB3H,kBAErE4H,EAAa,MACZF,EADY,GAEZ3F,EAFY,CAIf8F,cAAeH,EAASxH,SAExBA,SAAUyH,EAAgBzH,SAC1BN,QAAS+H,EAAgBxH,WAG9BoH,EAAejJ,KAAKsJ,KAtBpB,wBAwBQhF,EAxBR,CAwBgB4E,MAAOD,KAxBvB,2C,oCCRDO,GAAU,CACZ,CACI9I,SAAU,SACV+I,KAAM,SACNzL,MAAO,KAEX,CACI0C,SAAU,WACV+I,KAAM,WACNzL,MAAO,KAEX,CACI0C,SAAU,OACV+I,KAAM,OACNzL,MAAO,KAEX,CACI0C,SAAU,gBACV+I,KAAM,OACNzL,MAAO,MAIT0L,GAAY7N,YAAO,MAAPA,CAAc,CAC5BqC,QAAS,SAGPyL,GAAgB9N,YAAO,MAAPA,CAAc,CAChCmC,MAAO,QAgEI4L,GA5DK,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAf,OAChB,kBAACC,GAAA,EAAD,CAAOC,SAAO,GACV,kBAACD,GAAA,EAAMzN,OAAP,KACI,kBAACyN,GAAA,EAAM9M,IAAP,KACKuM,GAAQ1E,IAAI,SAAAmF,GAAc,OAAK,kBAACF,GAAA,EAAMG,WAAP,CAC5BrD,IAAKoD,EAAeR,KACpBzL,MAAOiM,EAAejM,OAAQiM,EAAeR,QAIhDK,GAAY,kBAACC,GAAA,EAAMG,WAAP,gBAGrB,kBAACH,GAAA,EAAMI,KAAP,KACKN,EAAW/E,IAAI,SAAAsF,GAAW,OACvB,kBAACL,GAAA,EAAM9M,IAAP,KACKuM,GAAQ1E,IAAI,SAAAmF,GACT,MAA+B,kBAA5BA,EAAevJ,SAEV,kBAACqJ,GAAA,EAAMM,KAAP,CAAYxD,IAAKoD,EAAevJ,UAC3B0J,EAAYH,EAAevJ,WAIpC0J,EAAY3F,yBAER,kBAACsF,GAAA,EAAMM,KAAP,KACKD,EAAY3F,yBAAyBK,IAAI,SAAAwF,GACtC,OACA,kBAACZ,GAAD,CAAW7C,IAAKyD,EAAO9F,WACnB,kBAACmF,GAAD,KAAgBW,EAAO9F,WACvB,kBAACmF,GAAD,KACKW,EAAO1I,cAS5B,kBAAC,IAAMrF,SAAP,KACI,kBAACwN,GAAA,EAAMM,KAAP,KACKD,EAAYb,eAEjB,kBAACQ,GAAA,EAAMM,KAAP,KACI,kBAAC,IAAD,CAAM1N,GAAE,kBAAayN,EAAY9I,UAC7B,kBAACiJ,GAAA,EAAD,CAAM5G,KAAK,uBC/E7C6G,GAAmB3O,YAAO,MAAPA,CAAc,CACnC6B,UAAW,QACXM,MAAO,SAuBIyM,GApBS,SAAC,GAAoB,IAAlBZ,EAAiB,EAAjBA,WACvB,OAAIA,EAOAA,EAAWa,OAMf,yBAAK9N,MAAO,CAACoB,MAAO,SACjB,kBAAC,GAAD,CAAa6L,WAAYA,KALpB,+DAPA,kBAACW,GAAD,KACI,kBAACG,GAAA,EAAD,CAAQC,QAAM,MCEfC,GAZkB,SAAC,GAAiB,IAAfvJ,EAAc,EAAdA,QAAc,EACPjD,mBAAS,MADF,mBACvCwL,EADuC,KAC3BiB,EAD2B,KAS9C,OAPAzC,oBAAU,WAAM,2CACZ,4BAAA5J,EAAA,qEACqBsE,GAAiBzB,GADtC,OACSd,EADT,OAEGsK,EAAiBtK,GAFpB,0CADY,uBAAC,WAAD,wBAKZuK,IACD,CAACzJ,IACG,kBAAC,GAAD,CAAiBuI,WAAYA,K,0CCKzBmB,OAlBf,SAAgBC,GACVA,EAAUC,SAASD,EAAS,IAAhC,IACIE,EAAQC,KAAKC,MAAMJ,EAAU,MAC7BpG,EAAUuG,KAAKC,OAAOJ,EAAkB,KAARE,GAAgB,IAChDG,EAAUL,EAAkB,KAARE,EAAyB,GAAVtG,EAWvC,OATIsG,EAAQ,KACVA,EAAQ,IAAMA,GAEZtG,EAAU,KACZA,EAAU,IAAMA,GAEdyG,EAAU,KACZA,EAAU,IAAMA,GAEXH,EAAQ,IAAMtG,EAAU,IAAMyG,GCNjCC,GAAQ1P,IAAOC,GAAG,CAAEkC,MAAO,OAAQH,aAAc,mBACjD2N,GAAO3P,IAAO4P,KAAK,CACvBvN,QAAS,QACT7B,MAAO,OACPqP,WAAY,QAERC,GAAY9P,IAAO+P,GAAG,CAAE5N,MAAO,SAC/B6N,GAAchQ,YAAOkC,IAAPlC,CAAc,CAChCmC,MAAO,OACP8N,SAAU,kBACVC,WAAY,mBAERC,GAAoBnQ,IAAO4P,KAAK,CACpCvN,QAAS,QACTN,UAAW,MACXvB,MAAO,OACP4P,YAAa,SAETC,GAAiBrQ,IAAOsQ,IAAI,CAChCnO,MAAO,OACP8J,OAAQ,QACR5L,QAAS,SAELkQ,GAAqBvQ,YAAOwQ,KAAPxQ,CAAoB,CAC7CiQ,SAAU,kBACVC,WAAY,mBAERO,GAA8BzQ,IAAO4P,KAAK,CAC9CvN,QAAS,QACTN,UAAW,MACXkO,SAAU,kBACVC,WAAY,iBACZE,YAAa,SAETM,GAAY1Q,IAAOsQ,IAAI,CAC3BK,UAAW,SACXC,UAAW,QACX7O,UAAW,MACX8O,OAAQ,sBACRzQ,aAAc,YAEV0Q,GAAY9Q,YAAOkD,IAAPlD,CAAe,CAC/BK,QAAS,qBACT2B,aAAc,iBACdD,UAAW,iBACXM,QAAS,qBAEL0O,GAAY/Q,YAAOgR,KAAPhR,CAAY,CAC5B,SAAU,CACRiQ,SAAU,qBAGRgB,GAAOjR,YAAOgR,KAAIC,KAAXjR,CAAiB,CAC5B6Q,OAAQ,kBACRrF,UAAW,kBACX0F,gBAAiB,kBACjBjB,SAAU,kBACVC,WAAY,mBAwJCiB,GArJD,SAAC,GAQR,IAPLrR,EAOI,EAPJA,GACAsR,EAMI,EANJA,MACA9H,EAKI,EALJA,KACAN,EAII,EAJJA,QACAa,EAGI,EAHJA,UACAT,EAEI,EAFJA,SACAnC,EACI,EADJA,WAEMoK,EAAiB9O,IAAM+O,OAAO,MADhC,EAE0C/O,IAAMC,SAASyE,GAFzD,mBAEGsK,EAFH,KAEoBC,EAFpB,OAGoDjP,IAAMC,SAAS,IAHnE,mBAGGiP,EAHH,KAGyBC,EAHzB,KAeEC,EAAa,SAAAlC,GACjB4B,EAAenG,QAAQ0G,OAAOC,WAAWpC,IACzCqC,OAAOC,OAAO,CACZC,IAAK,EACLC,KAAM,EACNC,SAAU,YAIRC,EAAQ,CACZ,CACEC,SAAU,UACVC,OAAQ,kBACN,kBAACpB,GAAD,CAAM9N,UAAU,GACd,kBAACjC,EAAA,EAAKE,IAAN,KACE,uCACA,kBAACK,EAAA,EAAD,CAAM6Q,SAAO,GACVtJ,EAAQC,IAAI,WAAmBsJ,GAAnB,IAAGnM,EAAH,EAAGA,aAAH,OACX,kBAAC3E,EAAA,EAAKE,KAAN,KAAYyE,EAAa0B,UAI/B,kBAAC5G,EAAA,EAAKE,IAAN,CAAUL,MAAO,CAAEgB,UAAW,QAC5B,qCACA,kBAACN,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,KAAN,KACE,uBAAG6Q,KAAM3I,GAAT,oCAOZ,CACEuI,SAAU,aACVC,OAAQ,kBACN,kBAACpB,GAAD,CAAM9N,UAAU,GACb8D,EAAWgC,IAAI,WAAuBsJ,GAAvB,IAAG3E,EAAH,EAAGA,KAAM6E,EAAT,EAASA,WAAT,OACd,kBAACvR,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKE,IAAN,KACE,kBAACF,EAAA,EAAKI,OAAN,CAAaa,MAAM,KACjB,kBAAC2O,GAAD,CAAW4B,KAAK,OAAOC,QAAS,kBAAMhB,EAAWc,KAC/C,kBAAC/D,GAAA,EAAD,CAAM5G,KAAK,SACVqH,GAAOsD,KAGZ,kBAACvR,EAAA,EAAKI,OAAN,CAAaa,MAAM,MACjB,0BAAMpB,MAAO,CAAEsB,QAAS,eAAgBuQ,WAAY,QACjDhF,QAMX,kBAAC1M,EAAA,EAAKE,IAAN,SAIN,CACEgR,SAAU,QACVC,OAAQ,WACN,OACE,kBAACpB,GAAD,CAAM9N,UAAU,GACd,kBAACjC,EAAA,EAAKE,IAAN,KACE,kBAAC,GAAD,CAAiBqE,QAAS3F,SAQtC,OACE,kBAACoB,EAAA,EAAD,CAAMC,WAAS,GAEb,kBAACD,EAAA,EAAKE,IAAN,CAAUL,MAAO,CAAEV,QAAS,WAC1B,kBAACqP,GAAD,KAAQ0B,GACR,kBAAC,GAAD,sBAAqB7H,IAAOD,GAAMK,OAAO,SAG3C,kBAACzI,EAAA,EAAKE,IAAN,KACE,kBAACF,EAAA,EAAKI,OAAN,CAAaa,MAAM,MACjB,kBAAC,KAAD,CAAa0Q,IAAKxB,EAAgBlM,IAAKiE,EAAU0J,UAAQ,KAE3D,kBAAC5R,EAAA,EAAKI,OAAN,CAAaa,MAAM,KACjB,kBAAC2N,GAAD,0BACA,kBAACE,GAAD,CACE/M,SA9FqB,SAAC1D,EAAD,GAAmB,IAAbsD,EAAY,EAAZA,MACnC6O,EAAwB7O,GACxB2O,EACEvK,EAAWI,OAAO,gBANO0L,EAMJnF,EAAH,EAAGA,KAAH,OANOmF,EAMyBlQ,GALO,IAKb+K,EALvCoF,cAAcC,QAAQF,EAAUC,mBAiG/BnQ,MAAO4O,EACPzO,YAAY,sBAEY,KAAzByO,GACC,kBAACtB,GAAD,KACGoB,EAAgB1C,OADnB,YAIwB,KAAzB4C,GAA+BF,EAAgB1C,OAAS,GACvD,kBAAC6B,GAAD,KACGa,EAAgBtI,IAAI,gBAAG2E,EAAH,EAAGA,KAAM6E,EAAT,EAASA,WAAT,OACnB,kBAACpC,GAAD,KACE,kBAACE,GAAD,CACE2C,YAAa,CAACzB,GACd0B,YAAY,EACZC,gBAAiBxF,IAEnB,kBAACkD,GAAD,CAAW4B,KAAK,OAAOC,QAAS,kBAAMhB,EAAWc,KAC/C,kBAAC/D,GAAA,EAAD,CAAM5G,KAAK,SACVqH,GAAOsD,QAOQ,KAAzBhB,GACC,kBAAChB,GAAD,8CAMN,kBAACM,GAAD,CAAWsC,KAAM,CAAEC,WAAW,EAAMC,UAAU,GAAQpB,MAAOA,MCpLpDqB,GA5BQ,SAAC,GAAY,IAAV1T,EAAS,EAATA,GAAS,EACPyC,IAAMC,WADC,mBAC1BsG,EAD0B,KACnB2K,EADmB,KAcjC,OAXAlR,IAAMiK,UAAU,WACd,IACE,qBAAC,4BAAA5J,EAAA,qEACyBiG,GAAa/I,GADtC,OACO4T,EADP,OAECD,EAASC,GAFV,wCAAD,GAIA,MAAOnU,MAGR,IAEIuJ,EACL,kBAAC,GAAD,CACEhJ,GAAIA,EACJsR,MAAOtI,EAAMhB,KACbwB,KAAMR,EAAMQ,KACZH,YAAaL,EAAMK,YACnBU,UAAWf,EAAMe,UACjBT,SAAUN,EAAMM,SAChBJ,QAASF,EAAME,QACf/B,WAAY6B,EAAM7B,aAElB,kBAAC6H,GAAA,EAAD,CAAQC,QAAM,KCzBdnN,GAAS5B,YAAOa,IAAPb,CAAkB,CAC/B6B,UAAW,UAGPC,GAAmB9B,YAAOa,IAAPb,CAAkB,CACzC+B,UAAW,iBACXC,aAAc,mBAaD2R,GAVG,SAAC,GAAe,IAAb7I,EAAY,EAAZA,MACnB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOhL,GAAIgL,EAAM8I,OAAO9T,QCd1B+T,GAAoB7T,YAAO,MAAPA,CAAc,CACpCqC,QAAS,OACTyR,SAAU,SAGRvI,GAAOvL,YAAO,MAAPA,CAAc,CACvBmC,MAAO,QACP0O,OAAQ,oBACRrF,UAAW,sBACXnL,QAAS,SACT2B,aAAc,SACd5B,aAAc,MACd2T,YAAa,OACbC,OAAQ,UACR7T,WAAY,UACZ,SAAU,CACN8T,UAAW,iBAIbC,GAAclU,YAAO,KAAPA,CAAa,CAC7B6P,WAAY,IACZI,SAAU,WAwBCkE,eApBS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACI,kBAAC,WAAD,KACI,8CACA,kBAACR,GAAD,KACKO,EAAOnL,IAAI,gBAAGN,EAAH,EAAGA,UAAW2L,EAAd,EAAcA,MAAOxU,EAArB,EAAqBA,GAArB,OACR,kBAAC,GAAD,CACIkL,IAAKrC,EACLgK,QAAS,kBAAM0B,EAAQlQ,KAAR,kBAAwBrE,MACvC,kBAACoU,GAAD,KAAcvL,GACd,kDACA,uBAAG6J,KAAI,iBAAY8B,IAAUA,UCjBtCC,GAnBkB,WAAO,IAAD,EACJ/R,mBAAS,MADL,mBAC5B4R,EAD4B,KACpBI,EADoB,KAWnC,OARAhI,oBAAU,WAAM,2CACZ,4BAAA5J,EAAA,qEACuBqK,KADvB,OACUhJ,EADV,OAEIuQ,EAAavQ,GAFjB,0CADY,uBAAC,WAAD,wBAKZiL,IACF,IAEEkF,EAIA,kBAAC,GAAD,CAAiBA,OAAQA,IAHlB,kBAACtF,GAAA,EAAD,CAAQC,QAAM,KCXvBnN,GAAS5B,YAAOa,IAAPb,CAAkB,CAC7B6B,UAAW,UAITC,GAAmB9B,YAAOa,IAAPb,CAAkB,CACvC+B,UAAW,iBACXC,aAAc,mBAaHyS,GAVA,WACX,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,SCfVC,GAAgB1U,YAAO,MAAPA,CAAc,CAChCqC,QAAS,OACTsS,eAAgB,SAChBC,cAAe,SACfC,WAAY,WAsBDC,GAnBA,SAAC,GAAgE,IAAD,IAA9DC,cAAgBpM,EAA8C,EAA9CA,UAAW2L,EAAmC,EAAnCA,MAAOU,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAAS5H,EAAY,EAAZA,MAC/D,OACA,kBAACqH,GAAD,KACI,kBAACnJ,GAAA,EAAD,CAAMxK,MAAO,CAACV,QAAS,OAAQ8B,MAAO,SAClC,kBAACoJ,GAAA,EAAK9K,OAAN,KAAckI,GACd,uBAAG6J,KAAI,iBAAY8B,IAAUA,GAC7B,6BAAMU,GACN,wCAEI,uBAAIE,OAAQ,SACRC,IAAI,sBACJ3C,KAAMyC,GAAUA,KAG5B,kBAAC,GAAD,CAAajH,WAAYX,EAAOY,UAAU,MCFnCkG,eAjBS,SAAC,GAAkC,IAAbrU,EAAY,EAA/BgL,MAAS8I,OAAU9T,GAAY,EACT0C,mBAAS,MADA,mBAC/CuS,EAD+C,KAChCK,EADgC,KAStD,OAPA5I,oBAAU,WAAM,2CACZ,4BAAA5J,EAAA,qEACwBsK,GAAkBpN,GAD1C,OACUuN,EADV,OAEI+H,EAAoB/H,GAFxB,0CADY,uBAAC,WAAD,wBAKZ6B,IACD,CAACpP,IACAiV,EAIA,kBAAC,GAAD,CAAQA,cAAeA,IAHhB,kBAACjG,GAAA,EAAD,CAAQC,QAAM,MCXvBnN,GAAS5B,YAAOa,IAAPb,CAAkB,CAC7B6B,UAAW,UAITC,GAAmB9B,YAAOa,IAAPb,CAAkB,CACvC+B,UAAW,iBACXC,aAAc,mBAaH8S,GAVA,WACX,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,kBAAC,GAAD,SCIDO,GAdH,kBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAW7I,KACjC,kBAAC,IAAD,CAAO4I,KAAK,cAAcC,UAAWrE,KACrC,kBAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,UAAUC,UAAWf,KACvC,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,cAAcC,UAAWV,MAE7C,kBAAC,EAAD,QCRgBY,QACW,cAA7B5D,OAAOlF,SAAS+I,UAEe,UAA7B7D,OAAOlF,SAAS+I,UAEhB7D,OAAOlF,SAAS+I,SAAS7K,MACvB,2DCZN8K,IAASvD,OAAO,kBAAC,GAAD,MAASwD,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5Q,KAAK,SAAA6Q,GACjCA,EAAaC,iB","file":"static/js/main.6afee02d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 206;","import React from \"react\";\nimport { Segment, Container } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nconst Brand = styled.h1({});\n\nconst HeadingTab = styled('span')({\n  transition: '.8s all',\n  borderRadius: '5px',\n  padding: '1rem .5rem',\n  marginLeft: '-.5rem',\n  ':hover': {\n    backgroundColor: '#F5F5F5',\n    color: 'black'\n  }\n})\n\nconst Header = () => (\n  <React.Fragment>\n    <Segment vertical>\n      <Container>\n        <Link to=\"/\">\n          <Brand>Council Data Project</Brand>\n        </Link>\n      </Container>\n    </Segment>\n    <Segment vertical>\n      <Container>\n        <Link to=\"/\">\n          <HeadingTab>Events</HeadingTab>\n        </Link>\n        <Link to=\"/people\">\n          <HeadingTab style={{marginLeft: '10px'}}>People</HeadingTab>\n        </Link>\n      </Container>\n    </Segment>\n  </React.Fragment>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Container, Segment, Grid, Header, List } from \"semantic-ui-react\";\n\nconst Footer = () => (\n  <Segment inverted vertical style={{ padding: \"5em 0em\" }}>\n    <Container>\n      <Grid inverted stackable>\n        <Grid.Row columns=\"equal\">\n          <Grid.Column>\n            <Header inverted as=\"h4\" content=\"About\" />\n            <List link inverted>\n              <List.Item as=\"a\">The Project</List.Item>\n              <List.Item as=\"a\">The Team</List.Item>\n              <List.Item as=\"a\">Other Work</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column>\n            <Header inverted as=\"h4\" content=\"Seattle\" />\n            <List link inverted>\n              <List.Item as=\"a\">City of Seattle</List.Item>\n              <List.Item as=\"a\">Seattle Open Data</List.Item>\n              <List.Item as=\"a\">Seattle Channel</List.Item>\n            </List>\n          </Grid.Column>\n          <Grid.Column>\n            <Header inverted as=\"h4\" content=\"Developers\" />\n            <List link inverted>\n              <List.Item as=\"a\">Council Data Project</List.Item>\n              <List.Item as=\"a\">Seattle Specific</List.Item>\n              <List.Item as=\"a\">Transcription Runner</List.Item>\n            </List>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <p>\n            This web application is not funded by, nor associated with the\n            Seattle City Council. This is a prototype web application to show\n            the viability of an automated and collaborativly sourced city\n            council transcription service. The transcripts are roughly\n            ninty-percent accurate, and therefore may not represent what was\n            actually said.\n          </p>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  </Segment>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { Container, Input, Button, Grid } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst SearchBar = styled(Input)({\n  width: \"50% !important\"\n});\n\nconst StyledGrid = styled(Grid)({\n  display: \"block\",\n  marginTop: \"150px !important\"\n});\n\nconst HomePage = () => {\n  const [searchQuery, setSearchQuery] = React.useState();\n\n  const handleSearch = async (e, { value }) => {\n    setSearchQuery(value);\n  };\n\n  return (\n    <Layout>\n      <ContentContainer>\n        <StyledGrid verticalAlign=\"middle\" centered>\n          <Grid.Row>\n            <h1>Search City Council Transcripts</h1>\n          </Grid.Row>\n          <Grid.Row>\n            <SearchBar\n              placeholder=\"Enter a keyword to search meeting transcripts\"\n              value={searchQuery}\n              onChange={handleSearch}\n            />\n            <Button\n              attached=\"right\"\n              primary\n              as={Link}\n              to={`/search?q=${searchQuery}`}\n            >\n              Search\n            </Button>\n          </Grid.Row>\n        </StyledGrid>\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n","import * as firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyA7aO6weBcOUBZLmxE3aMyn4NeElVEHZUc\",\n  authDomain: \"cdp-sea.firebaseapp.com\",\n  projectId: \"cdp-seattle\",\n  databaseURL: \"https://cdp-sea.firebaseio.com\"\n});\n\nconst db = firebase.firestore();\n\nasync function extractData(queryResults) {\n  const results = [];\n  queryResults.forEach(doc => {\n    const data = doc.data();\n    const thisEvent = {\n      id: doc.id,\n      ...data\n    };\n    results.push(thisEvent);\n  });\n  return results;\n}\n\n/**\n *\n * @param {string} tableName table to get all resources from\n * @return {array} returns array of resources\n */\nexport async function getAllResources(tableName) {\n  const res = await db\n    .collection(tableName)\n    .get()\n    .catch(err => {\n      console.err(\"err--->\", err);\n    });\n  return extractData(res);\n}\n\nexport async function getSingleResource(tableName, accessor, id) {\n  try {\n    const res = await db\n      .collection(tableName)\n      .where(accessor, \"==\", id)\n      .get()\n      .catch(err => {\n        console.err(\"err--->\", err);\n      });\n\n    return extractData(res);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getResourceById(tableName, id) {\n  try {\n    const res = await db\n      .collection(tableName)\n      .doc(id)\n      .get();\n\n    return res.data();\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n","export async function fetchJson(url){\n    return fetch(url)\n        .then(res => res.json())\n}","import * as firebase from \"firebase\";\nimport moment from \"moment\";\nimport natural from \"natural\";\nimport { flatten, sortBy, reverse, groupBy, mapValues, filter } from \"lodash\";\nimport { getAllResources, getSingleResource, getResourceById } from \"./baseApi\";\nimport { fetchJson } from \"./utils\";\n\nconst storage = firebase.storage();\n\nexport async function getAllEvents() {\n  return getAllResources(\"event\");\n}\n\n/**\n * @param {object} takes a single record from getAll, just needs {id: id}\n * @returns {object} returns the same object with the transcript attached\n */\n\nexport async function getEventMinutes(eventId) {\n  try {\n    const eventMinutes = await getSingleResource(\n      \"event_minutes_item\",\n      \"event_id\",\n      eventId\n    );\n    return eventMinutes;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getEventMinutesItem(eventMinutesItemId) {\n  try {\n    const {\n      minutes_item_id,\n      created,\n      decision,\n      event_id,\n      index\n    } = await getResourceById(\"event_minutes_item\", eventMinutesItemId);\n    const minutesItem = await getResourceById(\"minutes_item\", minutes_item_id);\n    const minutesItemFile = await getSingleResource(\n      \"minutes_item_file\",\n      \"minutes_item_id\",\n      minutes_item_id\n    );\n\n    return {\n      id: eventMinutesItemId,\n      created,\n      decision,\n      event_id,\n      index,\n      minutes_item: {\n        id: minutes_item_id,\n        ...minutesItem,\n        file: minutesItemFile\n      }\n    };\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getEventBody(bodyId) {\n  try {\n    const body = await getResourceById(\"body\", bodyId);\n    return body;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getEventTranscriptMetadata(eventId) {\n  try {\n    const [firstTranscript] = await getSingleResource(\n      \"transcript\",\n      \"event_id\",\n      eventId\n    );\n\n    const transcriptMetadata = await getResourceById(\n      \"file\",\n      firstTranscript.file_id\n    );\n\n    // https://firebase.google.com/docs/storage/web/download-files\n    const gsReference = storage.refFromURL(transcriptMetadata.uri);\n    const transcript = await gsReference\n      .getDownloadURL()\n      .then(url => fetchJson(url));\n\n    return transcript;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getVotesForEvent(eventId) {\n  // get all minute items for a single event\n  const extractedMinutes = await getSingleResource(\n    \"event_minutes_item\",\n    \"event_id\",\n    eventId\n  );\n  // filter out minute items that are not votes\n  const minuteItemsWithDecisions = extractedMinutes.filter(\n    minute => minute.decision !== null\n  );\n\n  // instead of getting all minutes items, we could create an array of promises as below\n  const allMinuteItems = await getAllResources(\"minutes_item\");\n  const formattedItems = [];\n  minuteItemsWithDecisions.forEach(item => {\n    const thisMinuteItem = allMinuteItems.find(\n      minuteItem => minuteItem.id === item.minutes_item_id\n    );\n    formattedItems.push({\n      matter: thisMinuteItem.matter,\n      name: thisMinuteItem.name,\n      id: item.id,\n      decision: item.decision\n    });\n  });\n\n  const allPeople = await getAllResources(\"person\");\n  const promises = [];\n  formattedItems.forEach(item => {\n    const getVotesForMinuteItem = getSingleResource(\n      \"vote\",\n      \"event_minutes_item_id\",\n      item.id\n    );\n    promises.push(getVotesForMinuteItem);\n  });\n  await Promise.all(promises).then(res => {\n    res.forEach(votesForMinuteItem => {\n      const thisEventMinutesItemId =\n        votesForMinuteItem[0].event_minutes_item_id;\n      const formattedMinutesItem = formattedItems.find(\n        item => item.id === thisEventMinutesItemId\n      );\n      const votesByPerson = [];\n      votesForMinuteItem.forEach(unformattedVote => {\n        const person = allPeople.find(\n          person => person.id === unformattedVote.person_id\n        );\n        votesByPerson.push({\n          decision: unformattedVote.decision,\n          person_id: unformattedVote.person_id,\n          full_name: person.full_name\n        });\n      });\n      formattedMinutesItem.formattedIndividualVotes = votesByPerson;\n    });\n  });\n  return formattedItems;\n}\n\nexport async function getEventById(id) {\n  try {\n    const event = await getResourceById(\"event\", id);\n    const body = await getEventBody(event.body_id);\n    const minutes = await getEventMinutes(id);\n    const minutesItems = await Promise.all(\n      minutes.map(({ id }) => getEventMinutesItem(id))\n    );\n    const transcript = await getEventTranscriptMetadata(id);\n\n    return {\n      id,\n      name: body.name,\n      description: body.description,\n      videoUrl: event.video_uri,\n      date: moment\n        .utc(event.event_datetime.toDate())\n        .format(\"MM-DD-YYYY HH:MM:SS\"),\n      minutes: sortBy(minutesItems, minuteItem => minuteItem.index),\n      transcript: transcript.data,\n      scPageUrl: event.source_uri\n    };\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getBasicEventById(id) {\n  try {\n    const event = await getResourceById(\"event\", id);\n    const body = await getEventBody(event.body_id);\n\n    return {\n      id,\n      name: body.name,\n      description: body.description,\n      date: moment\n        .utc(event.event_datetime.toDate())\n        .format(\"MM-DD-YYYY HH:MM:SS\")\n    };\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexport async function getEventsByIndexedTerm(term) {\n  const valueMin = 10;\n  try {\n    natural.PorterStemmer.attach();\n\n    const stemmedTokens = term.tokenizeAndStem();\n\n    // get matches for each term\n    const matches = await Promise.all(\n      stemmedTokens.map(stemmedToken =>\n        getSingleResource(\"indexed_event_term\", \"term\", stemmedToken)\n      )\n    );\n\n    // create a map of event id to object with id and sum of match values\n    const summedMatchValueByEventId = mapValues(\n      groupBy(flatten(matches), match => match.event_id),\n      (eventTermMatches, key) =>\n        eventTermMatches.reduce(\n          (current, item) => ({\n            ...current,\n            value: current.value + item.value\n          }),\n          { event_id: key, value: 0 }\n        )\n    );\n\n    // reverse to get highest value first\n    const sortedSummedMatches = reverse(\n      sortBy(\n        filter(summedMatchValueByEventId, ({ value }) => value >= valueMin),\n        ({ value }) => value\n      )\n    );\n\n    // fetch events in order of value and return\n    const events = await Promise.all(\n      sortedSummedMatches.map(({ event_id }) => getBasicEventById(event_id))\n    );\n\n    return events;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledCard = styled(Card)({\n  boxShadow: \"none !important\"\n});\n\nconst StyledCardContent = styled(Card.Content)({\n  padding: \"0 !important\"\n});\n\nconst EventCard = ({ name, date, description, link }) => (\n  <StyledCard fluid>\n    <StyledCardContent>\n      <Card.Header>\n        <Link to={link}>{name}</Link>\n      </Card.Header>\n      <Card.Meta>{date}</Card.Meta>\n      <Card.Description>{description}</Card.Description>\n    </StyledCardContent>\n  </StyledCard>\n);\n\nexport default EventCard;\n","import React from \"react\";\nimport EventCard from \"./EventCard\";\nimport { Card } from \"semantic-ui-react\";\n\nconst EventCardGroup = ({ events }) => {\n  return (\n    <Card.Group centered>\n      {events.map(({ name, date, description, id }) => (\n        <EventCard\n          name={name}\n          date={date}\n          description={description}\n          link={`/events/${id}`}\n        />\n      ))}\n    </Card.Group>\n  );\n};\n\nexport default EventCardGroup;\n","import React from \"react\";\nimport { Input } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport { getEventsByIndexedTerm } from \"../api/eventApi\";\nimport EventCardGroup from \"../components/EventCardGroup\";\n\nconst SearchBar = styled(Input)({\n  width: \"50% !important\",\n  margin: \"1em 0 3em !important\"\n});\n\nconst EventCardGroupContainer = ({ query }) => {\n  const [searchQuery, setSearchQuery] = React.useState(query);\n  const [searchInProgress, setSearchInProgress] = React.useState(false);\n  const [visibleEvents, setVisibleEvents] = React.useState([]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (searchQuery) {\n        setSearchInProgress(true);\n        const matchedEvents = await getEventsByIndexedTerm(searchQuery);\n        // filter all events by name and set visible event\n        setVisibleEvents(matchedEvents);\n        setSearchInProgress(false);\n      }\n    })();\n  }, []);\n\n  const handleSearch = async (e, { value }) => {\n    setSearchQuery(value);\n    setSearchInProgress(true);\n    const matchedEvents = await getEventsByIndexedTerm(value);\n    // filter all events by name and set visible event\n    setVisibleEvents(matchedEvents);\n    setSearchInProgress(false);\n  };\n\n  return (\n    <React.Fragment>\n      <SearchBar\n        placeholder=\"Search by event name\"\n        value={searchQuery}\n        onChange={handleSearch}\n        loading={searchInProgress}\n      />\n      <EventCardGroup events={visibleEvents} />\n    </React.Fragment>\n  );\n};\n\nexport default EventCardGroupContainer;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport queryString from \"query-string\";\nimport EventCardGroup from \"../containers/EventCardGroup\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst Search = ({ location }) => {\n  const { q } = queryString.parse(location.search);\n  return (\n    <Layout>\n      <ContentContainer>\n        <EventCardGroup query={q} />\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default Search;\n","import { getAllResources, getSingleResource, getResourceById } from './baseApi'\n\nexport async function getAllPeople(){\n    const allPeople = await getAllResources('person')\n    return allPeople\n}\n\n/**\n * @param {object} personData takes data from person query, all it needs is {id: id}\n * @returns {array} array of votes with the following data:\n * { id, decision, file, event_minutes_item_id, matter, name, created, legistar_event_id, legistar_vote_id, person_id }\n */\n\nexport async function getVotesForPerson(personId){\n    const formattedVotes = []\n    const person = await getResourceById('person',personId)\n    const votes = await getSingleResource('vote', 'person_id', personId)\n    const allEventMinutesItems = await getAllResources('event_minutes_item')\n    const allMinuteItems = await getAllResources('minutes_item')\n    // commented this out for now, but we could link to the file if we get this data\n    // const allMinuteFiles = await getAllResources('minutes_item_file')\n    votes.forEach((voteData) => {\n        const eventMinuteItem = allEventMinutesItems.find(item => item.id === voteData.event_minutes_item_id);\n        const minuteItem = allMinuteItems.find(item => item.id === eventMinuteItem.minutes_item_id)\n        // const file = allMinuteFiles.find(item => item.minutes_item_id === minuteItem.id)\n        const formattedVote = {\n            ...voteData,\n            ...minuteItem,\n            // what this person voted\n            voteForPerson: voteData.decision,\n            // what the coucile decided\n            decision: eventMinuteItem.decision,\n            eventId: eventMinuteItem.event_id,\n            // file\n        }\n       formattedVotes.push(formattedVote)\n    })\n    return {...person, votes: formattedVotes}\n}","import React from 'react'\nimport { Table, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport styled from \"@emotion/styled\";\n\nconst Headers = [\n    {\n        accessor: 'matter',\n        text: 'Matter',\n        width: '2'\n    },\n    {\n        accessor: 'decision',\n        text: 'Decision',\n        width: '2',\n    },\n    {\n        accessor: 'name',\n        text: 'Name',\n        width: '6'\n    },\n    {\n        accessor: 'votingRecords',\n        text: 'Vote',\n        width: '4'\n    }\n]\n\nconst MiniTable = styled('div')({\n    display: 'flex'\n})\n\nconst MiniTableCell = styled('div')({\n    width: '50%'\n})\n\n\nconst VotingTable = ({ votingData, isPerson }) => (\n    <Table striped>\n        <Table.Header>\n            <Table.Row>\n                {Headers.map(headerMetaData => (<Table.HeaderCell \n                    key={headerMetaData.text}\n                    width={headerMetaData.width}>{headerMetaData.text}\n                    </Table.HeaderCell>\n                ))}\n                {/* If we are rendering votes for a person, we want to link to the event */}\n                {isPerson && <Table.HeaderCell>Event</Table.HeaderCell>}\n            </Table.Row>\n        </Table.Header>\n        <Table.Body>\n            {votingData.map(votingDatum => (\n                <Table.Row>\n                    {Headers.map(headerMetaData => {\n                        if(headerMetaData.accessor !== 'votingRecords') {\n                            return (\n                                <Table.Cell key={headerMetaData.accessor}>\n                                    {votingDatum[headerMetaData.accessor]}\n                                </Table.Cell>\n                            )\n                        }\n                        if (votingDatum.formattedIndividualVotes) {\n                            return (\n                                <Table.Cell>\n                                    {votingDatum.formattedIndividualVotes.map(record => {\n                                        return (\n                                        <MiniTable key={record.full_name}>\n                                            <MiniTableCell>{record.full_name}</MiniTableCell>\n                                            <MiniTableCell>\n                                                {record.decision}\n                                            </MiniTableCell>\n                                        </MiniTable>\n                                        )\n                                    })}\n                                </Table.Cell>\n                            )\n                        } else {\n                            return (\n                            <React.Fragment>\n                                <Table.Cell>\n                                    {votingDatum.voteForPerson}\n                                </Table.Cell>\n                                <Table.Cell>\n                                    <Link to={`/events/${votingDatum.eventId}`}>\n                                        <Icon name=\"linkify\"/>\n                                    </Link>\n                                </Table.Cell>\n                            </React.Fragment>  \n                            )\n                        }\n                    })}\n                </Table.Row>\n            ))}\n        </Table.Body>\n    </Table>\n)\n\nexport default VotingTable","import React from 'react'\nimport { Loader } from 'semantic-ui-react'\nimport VotingTable from './VotingTable'\nimport styled from \"@emotion/styled\";\n\nconst LoadingContainer = styled('div')({\n    minHeight: '100px',\n    width: '100%',\n})\n\nconst EventVotingPane = ({ votingData }) => {\n    if(!votingData) {\n        return (\n            <LoadingContainer>\n                <Loader active />\n            </LoadingContainer>\n        ) \n    }\n    if(!votingData.length) {\n        return (\n            <div>No votes found for this event.</div>\n        )\n    }\n    return (\n    <div style={{width: '100%'}}>\n       <VotingTable votingData={votingData}/>\n    </div>\n    )\n}\n\nexport default EventVotingPane;","import React, { useEffect, useState } from \"react\";\nimport {  getVotesForEvent } from '../api'\nimport EventVotingPane from \"../components/EventVotingPane\";\n\nconst EventVotingPaneContainer = ({ eventId }) => {\n    const [votingData, updateVotingData] = useState(null);\n    useEffect(() => {\n        async function fetchData() {\n           const res = await getVotesForEvent(eventId);\n           updateVotingData(res);\n        }\n        fetchData()\n    }, [eventId])\n    return <EventVotingPane votingData={votingData} />;\n};\n\nexport default EventVotingPaneContainer;\n","function hhmmss(sec_num) {\n  var sec_num = parseInt(sec_num, 10); // don't forget the second param\n  var hours = Math.floor(sec_num / 3600);\n  var minutes = Math.floor((sec_num - hours * 3600) / 60);\n  var seconds = sec_num - hours * 3600 - minutes * 60;\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n  if (seconds < 10) {\n    seconds = \"0\" + seconds;\n  }\n  return hours + \":\" + minutes + \":\" + seconds;\n}\n\nexport default hhmmss;\n","import React from \"react\";\nimport { Grid, Input, Button, Tab, List, Icon } from \"semantic-ui-react\";\nimport EventVotingPane from \"../containers/EventVotingPane\";\nimport ReactPlayer from \"react-player\";\nimport Highlighter from \"react-highlight-words\";\nimport moment from \"moment\";\nimport styled from \"@emotion/styled\";\nimport hhmmss from \"../utils/hhmmss\";\n\nconst Title = styled.h1({ width: \"100%\", marginBottom: \"5px !important\" });\nconst Date = styled.span({\n  display: \"block\",\n  color: \"grey\",\n  fontWeight: \"400\"\n});\nconst Subheader = styled.h2({ width: \"100%\" });\nconst SearchInput = styled(Input)({\n  width: \"100%\",\n  fontSize: \"16px !important\",\n  lineHeight: \"1.5 !important\"\n});\nconst SearchResultCount = styled.span({\n  display: \"block\",\n  marginTop: \"1em\",\n  color: \"grey\",\n  paddingLeft: \"15px\"\n});\nconst TranscriptItem = styled.div({\n  width: \"100%\",\n  margin: \"1em 0\",\n  padding: \"14px\"\n});\nconst TranscriptItemText = styled(Highlighter)({\n  fontSize: \"16px !important\",\n  lineHeight: \"1.5 !important\"\n});\nconst TranscriptSearchHelpMessage = styled.span({\n  display: \"block\",\n  marginTop: \"1em\",\n  fontSize: \"16px !important\",\n  lineHeight: \"1.5 !important\",\n  paddingLeft: \"15px\"\n});\nconst ScrollDiv = styled.div({\n  overflowY: \"scroll\",\n  maxHeight: \"228px\",\n  marginTop: \"1em\",\n  border: \"1px solid lightgrey\",\n  borderRadius: \"0.28rem\"\n});\nconst Timestamp = styled(Button)({\n  padding: \"5px 8px !important\",\n  marginBottom: \"8px !important\",\n  marginTop: \"8px !important\",\n  display: \"block !important\"\n});\nconst StyledTab = styled(Tab)({\n  \"a.item\": {\n    fontSize: \"20px !important\"\n  }\n});\nconst Pane = styled(Tab.Pane)({\n  border: \"none !important\",\n  boxShadow: \"none !important\",\n  WebkitBoxShadow: \"none !important\",\n  fontSize: \"16px !important\",\n  lineHeight: \"1.5 !important\"\n});\n\nconst Event = ({\n  id,\n  title,\n  date,\n  minutes,\n  scPageUrl,\n  videoUrl,\n  transcript\n}) => {\n  const videoPlayerRef = React.useRef(null);\n  const [transcriptItems, setTranscriptItems] = React.useState(transcript);\n  const [transcriptSearchText, setTranscriptSearchText] = React.useState(\"\");\n\n  const isSubstring = (string, substring) =>\n    string.toLowerCase().indexOf(substring.toLowerCase()) !== -1;\n\n  const handleTranscriptSearch = (e, { value }) => {\n    setTranscriptSearchText(value);\n    setTranscriptItems(\n      transcript.filter(({ text }) => isSubstring(text, value))\n    );\n  };\n\n  const handleSeek = seconds => {\n    videoPlayerRef.current.seekTo(parseFloat(seconds));\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  const panes = [\n    {\n      menuItem: \"Details\",\n      render: () => (\n        <Pane attached={false}>\n          <Grid.Row>\n            <h3>Minutes</h3>\n            <List ordered>\n              {minutes.map(({ minutes_item }, i) => (\n                <List.Item>{minutes_item.name}</List.Item>\n              ))}\n            </List>\n          </Grid.Row>\n          <Grid.Row style={{ marginTop: \"1em\" }}>\n            <h3>Links</h3>\n            <List>\n              <List.Item>\n                <a href={scPageUrl}>Seattle Channel Event Page</a>\n              </List.Item>\n            </List>\n          </Grid.Row>\n        </Pane>\n      )\n    },\n    {\n      menuItem: \"Transcript\",\n      render: () => (\n        <Pane attached={false}>\n          {transcript.map(({ text, start_time }, i) => (\n            <Grid>\n              <Grid.Row>\n                <Grid.Column width=\"2\">\n                  <Timestamp size=\"tiny\" onClick={() => handleSeek(start_time)}>\n                    <Icon name=\"play\" />\n                    {hhmmss(start_time)}\n                  </Timestamp>\n                </Grid.Column>\n                <Grid.Column width=\"14\">\n                  <span style={{ display: \"inline-block\", paddingTop: \"8px\" }}>\n                    {text}\n                  </span>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          ))}\n          <Grid.Row />\n        </Pane>\n      )\n    },\n    {\n      menuItem: \"Votes\",\n      render: () => {\n        return (\n          <Pane attached={false}>\n            <Grid.Row>\n              <EventVotingPane eventId={id} />\n            </Grid.Row>\n          </Pane>\n        );\n      }\n    }\n  ];\n\n  return (\n    <Grid stackable>\n      {/* TODO: move this inline styling */}\n      <Grid.Row style={{ padding: \"0 14px\" }}>\n        <Title>{title}</Title>\n        <Date>Meeting Date: {moment(date).format(\"LLL\")}</Date>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column width=\"10\">\n          <ReactPlayer ref={videoPlayerRef} url={videoUrl} controls />\n        </Grid.Column>\n        <Grid.Column width=\"6\">\n          <Subheader>Search Transcript</Subheader>\n          <SearchInput\n            onChange={handleTranscriptSearch}\n            value={transcriptSearchText}\n            placeholder=\"Search transcript\"\n          />\n          {transcriptSearchText !== \"\" && (\n            <SearchResultCount>\n              {transcriptItems.length} results\n            </SearchResultCount>\n          )}\n          {transcriptSearchText !== \"\" && transcriptItems.length > 0 && (\n            <ScrollDiv>\n              {transcriptItems.map(({ text, start_time }) => (\n                <TranscriptItem>\n                  <TranscriptItemText\n                    searchWords={[transcriptSearchText]}\n                    autoEscape={true}\n                    textToHighlight={text}\n                  />\n                  <Timestamp size=\"tiny\" onClick={() => handleSeek(start_time)}>\n                    <Icon name=\"play\" />\n                    {hhmmss(start_time)}\n                  </Timestamp>\n                </TranscriptItem>\n              ))}\n            </ScrollDiv>\n          )}\n\n          {transcriptSearchText === \"\" && (\n            <TranscriptSearchHelpMessage>\n              Enter a search term to get results.\n            </TranscriptSearchHelpMessage>\n          )}\n        </Grid.Column>\n      </Grid.Row>\n      <StyledTab menu={{ secondary: true, pointing: true }} panes={panes} />\n    </Grid>\n  );\n};\n\nexport default Event;\n","import React from \"react\";\nimport { getEventById } from \"../api/eventApi\";\nimport { Loader } from \"semantic-ui-react\";\nimport Event from \"../components/Event\";\n\nconst EventContainer = ({ id }) => {\n  const [event, setEvent] = React.useState();\n\n  React.useEffect(() => {\n    try {\n      (async () => {\n        const eventData = await getEventById(id);\n        setEvent(eventData);\n      })();\n    } catch (e) {\n      // log error and display message\n    }\n  }, []);\n\n  return event ? (\n    <Event\n      id={id}\n      title={event.name}\n      date={event.date}\n      description={event.description}\n      scPageUrl={event.scPageUrl}\n      videoUrl={event.videoUrl}\n      minutes={event.minutes}\n      transcript={event.transcript}\n    />\n  ) : <Loader active/>;\n};\n\nexport default EventContainer;\n","import React from \"react\";\nimport Event from \"../containers/Event\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\n\nconst Layout = styled(Container)({\n  minHeight: \"100vh\"\n});\n\nconst ContentContainer = styled(Container)({\n  marginTop: \"2em !important\",\n  marginBottom: \"5em !important\"\n});\n\nconst EventPage = ({ match }) => {\n  return (\n    <Layout>\n      <ContentContainer>\n        <Event id={match.params.id} />\n      </ContentContainer>\n    </Layout>\n  );\n};\n\nexport default EventPage;\n","import React, { Fragment } from 'react'\nimport { withRouter } from \"react-router-dom\"\nimport styled from \"@emotion/styled\";\n\nconst FlexWrapContainer = styled('div')({\n    display: 'flex',\n    flexWrap: 'wrap',\n})\n\nconst Card = styled('div')({\n    width: '250px',\n    border: '1px solid #d4d4d5',\n    boxShadow: '0 1px 3px 0 #d4d4d5',\n    padding: '1.5rem',\n    marginBottom: '1.5rem',\n    borderRadius: '3px',\n    marginRight: '2rem',\n    cursor: 'pointer',\n    transition: '.4s all',\n    \":hover\": {\n        transform: 'scale(1.15)',\n    }\n})\n\nconst CardHeading = styled('h5')({\n    fontWeight: 600,\n    fontSize: '1.2rem'\n})\n\n\nconst PeopleCardGroup = ({ people, history }) => {\n    return (\n        <Fragment>\n            <h2>Voting History</h2>\n            <FlexWrapContainer>\n                {people.map(({ full_name, email, id }) => (\n                    <Card\n                        key={full_name} \n                        onClick={() => history.push(`/people/${id}`)}>\n                        <CardHeading>{full_name}</CardHeading>\n                        <p>City Council Member</p>\n                        <a href={`mailto:${email}`}>{email}</a>\n                    </Card>\n                    )\n                )}\n            </FlexWrapContainer>\n        </Fragment>\n    )\n}\n\nexport default withRouter(PeopleCardGroup)","import React, { useEffect, useState } from 'react'\nimport { getAllPeople } from '../api'\nimport PeopleCardGroup from '../components/PeopleCardGroup'\nimport { Loader } from \"semantic-ui-react\";\n\nconst PeopleCardGroupContainer = () => {\n    const [people, updatePeople] = useState(null)\n\n    useEffect(() => {\n        async function fetchData() {\n            const data = await getAllPeople()\n            updatePeople(data)\n        }\n        fetchData()\n    },[])\n\n    if(!people) {\n        return <Loader active/>\n    }\n    return (\n        <PeopleCardGroup people={people} />\n    )\n}\n\nexport default PeopleCardGroupContainer;","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport styled from \"@emotion/styled\";\nimport PeopleCardGroupContainer from '../containers/PeopleCardGroupContainer';\n\n// TODO: duplicate from Home, move to utils\nconst Layout = styled(Container)({\n    minHeight: \"100vh\"\n  });\n\n// TODO: duplicate from Home, move to utils\nconst ContentContainer = styled(Container)({\n    marginTop: \"2em !important\",\n    marginBottom: \"5em !important\"\n  });\n\nconst People = () => {\n    return (\n        <Layout>\n            <ContentContainer>\n                <PeopleCardGroupContainer />\n            </ContentContainer>\n        </Layout>\n    );\n}\n\nexport default People","import React from 'react';\nimport VotingTable from './VotingTable'\nimport { Card } from 'semantic-ui-react'\nimport styled from \"@emotion/styled\";\n\nconst FlexContainer = styled('div')({\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center'\n})\n\nconst Person = ({personHistory: {full_name, email, phone, website, votes}}) => {\n    return (\n    <FlexContainer>\n        <Card style={{padding: '1rem', width: '100%'}}>\n            <Card.Header>{full_name}</Card.Header>\n            <a href={`mailto:${email}`}>{email}</a>\n            <div>{phone}</div>\n            <div>\n                Website:  \n                <a  target={'_blank'}\n                    rel=\"noopener noreferrer\"\n                    href={website}>{website}</a>\n            </div>\n        </Card>\n        <VotingTable votingData={votes} isPerson={true} />\n    </FlexContainer>\n    )\n}\n\nexport default Person;","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { getVotesForPerson } from '../api';\nimport Person from '../components/Person';\nimport { Loader } from \"semantic-ui-react\";\n\n\nconst PersonContainer = ({ match: { params: { id }} }) => {\n    const [personHistory, updatePersonHistory] = useState(null);\n    useEffect(() => {\n        async function fetchData() {\n            const votes = await getVotesForPerson(id);\n            updatePersonHistory(votes);\n        }\n        fetchData()\n    }, [id])\n    if(!personHistory) {\n        return <Loader active/>\n    }\n    return (\n        <Person personHistory={personHistory}/>\n    )\n}\n\nexport default withRouter(PersonContainer);","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport PersonContainer from \"../containers/PersonContainer\";\nimport styled from \"@emotion/styled\";\n\n// TODO: duplicate from Home, move to utils\nconst Layout = styled(Container)({\n    minHeight: \"100vh\"\n  });\n\n// TODO: duplicate from Home, move to utils\nconst ContentContainer = styled(Container)({\n    marginTop: \"2em !important\",\n    marginBottom: \"5em !important\"\n  });\n\nconst Person = () => {\n    return (\n        <Layout>\n            <ContentContainer>\n                <PersonContainer />\n            </ContentContainer>\n        </Layout>\n    );\n}\n\nexport default Person","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\nimport Search from \"./pages/Search\";\nimport Event from \"./pages/Event\";\nimport People from \"./pages/People\";\nimport Person from \"./pages/Person\";\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/events/:id\" component={Event} />\n      <Route exact path=\"/people\" component={People} />\n      <Route exact path=\"/people/:id\" component={Person} />\n    </Switch>\n    <Footer />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}